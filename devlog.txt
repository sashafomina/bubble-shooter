StringCheese
Sasha Fomina
Daniel Ju
Kevin Li
pd 4
---------------------
Bubble Shooter!



/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-


UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-

COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-


MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-

LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-

||||||||||||||||||||||||||||||||||||||||||



 ______   ______   __   __   __       ______   _______     
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\    
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__  
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\ 
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/ 
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \ 
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/ 
==============================================================

2017-05-17
--------------------------------------------------------------
Sasha :: wrote up proposal based on discussion with Kevin and Daniel 
Daniel :: 
Kevin ::

2017-05-18
--------------------------------------------------------------
Sasha :: wrote up the first version of the plan and preliminary notes for the more of the speicifics of the design in a shared google doc
Daniel ::
Kevin :: Edited and suggested changes to Sasha's initial plan draft, changes to be uploaded later.

2017-05-21
--------------------------------------------------------------
Sasha :: 
Daniel ::
Kevin :: Created basic processing sketch for ball and ballshooter

2017-05-22
--------------------------------------------------------------
Sasha :: Came up with more ways to implement semester 2 data structures and algorithms.
Daniel :: Came up with more ways to implement semester 2 data structures and algorithms.
Kevin :: Came up with more ways to implement semester 2 data structures and algorithms.

2017-05-23
--------------------------------------------------------------
Sasha :: 
Daniel :: Updated the proposal to reflect comments from Mr. Brown. Uploaded proposal to Git repo. Also created the flow chart.
Kevin :: 

2017-05-24
--------------------------------------------------------------
Sasha :: 
Daniel :: Worked on integrating loops into our flowchart
Kevin :: Worked on integrating loops into our flowchart

2017-05-25
--------------------------------------------------------------
Sasha :: 
Daniel :: 
Kevin :: Began working on the Bubble class

2017-05-26
--------------------------------------------------------------
Sasha :: 
Daniel :: 
Kevin :: Finished the Bubble skeleton

2017-05-27
--------------------------------------------------------------
Sasha :: Filled in Bubble skeleton and started Bubble_Shooter driver class. A test Bubble in the drive class is now able to be launched based on the angle of themouse click and a pointer line of a certain length is draw from the bubble's startign position to based on the angle of the mouse hovering. Bubble can only be launched once.

Daniel :: 
Kevin ::

2017-05-29
--------------------------------------------------------------
Sasha :: 
Daniel :: 
Kevin :: Added descriptions for how the user plays the game and how the game works into the READme

2017-05-30
--------------------------------------------------------------
Sasha :: Added BubbleGrid class that populated a 2D array of Bubbles according to the hex grid layout with randomly colored Bubbles, so that every given Bubbble can only have a maximum of 6 neighbor Bubbles. Ensured that the xcors and ycors are such that the Bubble grid is displayed properly (an instance of type Bubble grid was added to the driver class).
Daniel :: Fixed flowchart. Revised plan to the most updated version.
Kevin :: Worked on creating the dotted line for launching and aiming the bubbble.

2017-05-31
--------------------------------------------------------------
Sasha :: Added setNeighbors method in BubbleGrid which ensures that all Bubbles keep track of their non-null neighbors including their unactive neighbors (state == 0). Modified populate so that half of the rows are filled with unactive bubble, in other words "open spaces" for bubbles to attach to. 
Daniel :: Attempted to create the inContact method, which checks to see if the bubble that is in motion comes into contact with a bubble thats already in the bubble field. Also tried to modify the move method so that if contact is reached, the bubble would be snapped into the bubble grid.
Kevin :: Fixed the dotted line, such that it has a limit of PI/12 out from the left and right bottom sides of the screen as options to shoot, and fixed appearance of the line including thickness and color.
==============================================================

2017-06-01
--------------------------------------------------------------
Sasha :: Transfered inContact method to the Bubble class. Added stick() and whichNeighbor() to the BubbleGird class, reworked Daniel's methods to use a different strategy in which the launched Bubble finds the first grid bubble it collides with and then searchs through its available neighbors to see which available slot is closest to the position of the bubble. Once the closest neighbor is found, the launched bubble's velocity is set to 0 and the launched bubble is set to a new random one to be launched. The closest neighbor is activated (state == 1) and its color is set to the color of the just launched bubble to create the illusion that the launched bubble was snapped in place.  
Daniel :: Created an updated plan. Editted BubbleShooter to implement a queue of all upcoming bubbles.
Kevin :: Integrated previous edit to Daniel and Sasha's revised file, and debugged.
==============================================================
